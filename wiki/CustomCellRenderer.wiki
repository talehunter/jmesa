This tutorial will show how to customize a table's column display. The example will change the background color (light green) of the career column if the president had a career as a soldier.

http://jmesa.org/wiki/images/customCellRenderer.jpg

We will start by creating our own custom !HtmlCellRenderer. The easiest way to do this is by extending the default !HtmlCellRendererImpl and overriding the render() method. The default implementation is very simple and is meant to be copied and tweaked to your liking.

{{{
private static class CustomHtmlCellRenderer extends HtmlCellRendererImpl {

    @Override
    public Object render(Object item, int rowcount) {
        String property = getColumn().getProperty();
        Object value = getCellEditor().getValue(item, property, rowcount);

        HtmlBuilder html = new HtmlBuilder();
        html.td(2);
        html.width(getColumn().getWidth());

        String valueStr = String.valueOf(value).toLowerCase();
        if (valueStr.contains("soldier")) {
            html.style("background-color:#c0dba7");
        } else {
            html.style(getStyle());
        }

        html.styleClass(getStyleClass());
        html.close();

        if (value != null) {
            html.append(value.toString());
        }

        html.tdEnd();

        return html.toString();
    }
}
}}}

Then we need to plug in our custom cell renderer. To do that we need to first grab the cell editor, instantiate the custom cell renderer, and then add that to the column.

{{{
private void customCellRenderer(TableFacade tableFacade) {

    HtmlTable table = (HtmlTable) tableFacade.getTable();
    HtmlRow row = table.getRow();
    HtmlColumn career = row.getColumn("career");

    // get the cell editor 
    CellEditor cellEditor = career.getCellRenderer().getCellEditor();

    // instantiate the custom cell renderer and set the editor on it
    HtmlCellRenderer htmlCellRenderer = new CustomHtmlCellRenderer();
    htmlCellRenderer.setCellEditor(cellEditor);
    career.setCellRenderer(htmlCellRenderer);
}
}}}


However, if you are using the tags then you just need to give the fully qualified path to your custom cell renderer. The tags will take care of plugging in the cell editor for you.

{{{
<jmesa:htmlColumn property="career" cellRenderer="com.mycompany.view.CustomHtmlCellRenderer"/>
}}}

