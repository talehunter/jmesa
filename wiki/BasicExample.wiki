The easiest way to work with JMesa is to create a new [TableFacade] and tweak it however you need to. 

=== Example ===
The following examples uses JMesa, along with Spring. It also assumes you have already followed the [Setup setup] instructions.

In its simplest form you can create a table in four lines of code:
{{{
TableFacade tableFacade = TableFacadeFactory.createTableFacade(id, request);
tableFacade.setColumnProperties("name.firstName", "name.lastName", "term", "career", "born");
tableFacade.setItems(items);
String html = tableFacade.render();
}}}

A more common example is to start with a facade and then customize it. I will show that next.

==== code references ====
All the code examples are checked into subversion. The best way to present these examples may be to just let you walk through the source code.
 * [http://jmesa.googlecode.com/svn/tags/jmesaWeb-2.3/src/org/jmesaweb/controller/BasicPresidentController.java Controller]
 * [http://jmesa.googlecode.com/svn/tags/jmesaWeb-2.3/web/jsp/basic.jsp JSP]

Be sure to pay attention to the [Javascript] page link so that you understand how Javascript is used to interact with the table through the onInvokeAction and onInvokeExportAction.

*Note:* If you have a date or numeric column then chances are that you will want to format it. See the [Editors] page for more details on how to do that. Be sure to add a custom [FilterMatcher filter strategy] if your column is filterable. 

_Once you have your table implemented you can use the !ParametersBuilder to [UnitTest test] your code.